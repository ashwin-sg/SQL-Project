Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000 
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115	
v. Review = 8090 (business_id), 9581(user_id), 10000(id)
vi. Checkin = 493
vii. Photo = 6493 (business_id), 10000(id)
viii. Tip = 3979 (business_id), 537(user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

	SELECT * FROM user

	WHERE id IS NULL 
	OR name IS NULL

	OR review_count IS NULL

	OR yelping_since IS NULL
	
OR useful IS NULL
	
OR funny IS NULL
	
OR cool IS NULL
	
OR fans IS NULL
	OR average_stars IS NULL
	
OR compliment_hot IS NULL

	OR compliment_more IS NULL
	
OR compliment_profile IS NULL
	
OR compliment_cute IS NULL
	
OR compliment_list IS NULL
	
OR compliment_note IS NULL
	
OR compliment_plain IS NULL

	OR compliment_cool IS NULL

	OR compliment_funny IS NULL
	
OR compliment_writer IS NULL
	
OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city, SUM(review_count) AS Review_Counts

	FROM business
	
GROUP BY city
	
ORDER BY SUM(review_count)  DESC
	
	
	Copy and Paste the Result Below:
	+-----------------+---------------+
	| city            | Review_Counts |
	+-----------------+---------------+
	| Las Vegas       |         82854 |
	| Phoenix         |         34503 |
	| Toronto         |         24113 |
	| Scottsdale      |         20614 |
	| Charlotte       |         12523 |
	| Henderson       |         10871 |
	| Tempe           |         10504 |
	| Pittsburgh      |          9798 |
	| Montréal        |          9448 |
	| Chandler        |          8112 |
	| Mesa            |          6875 |
	| Gilbert         |          6380 |
	| Cleveland       |          5593 |
	| Madison         |          5265 |
	| Glendale        |          4406 |
	| Mississauga     |          3814 |
	| Edinburgh       |          2792 |
	| Peoria          |          2624 |
	| North Las Vegas |          2438 |
	| Markham         |          2352 |
	| Champaign       |          2029 |
	| Stuttgart       |          1849 |
	| Surprise        |          1520 |
	| Lakewood        |          1465 |
	| Goodyear        |          1155 |
	+-----------------+---------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS Total_Counts

FROM business

WHERE city = 'Avon'

GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | Total_Counts |
+-------+--------------+
|   1.5 |           10 |
|   2.5 |            6 |
|   3.5 |           88 |
|   4.0 |           21 |
|   4.5 |           31 |
|   5.0 |            3 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS Total_Counts

FROM business

WHERE city = 'Beachwood'

GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | Total_Counts |
+-------+--------------+
|   2.0 |            8 |
|   2.5 |            3 |
|   3.0 |           11 |
|   3.5 |            6 |
|   4.0 |           69 |
|   4.5 |           17 |
|   5.0 |           23 |
+-------+--------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT name, id, review_count 

	FROM user
	
ORDER BY review_count DESC
	
Limit 3

	
		
	Copy and Paste the Result Below:
+--------+------------------------+--------------+
| name   | id                     | review_count |
+--------+------------------------+--------------+
| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
+--------+------------------------+--------------+		


8. Does posing more reviews correlate with more fans?

	No. As we can see in the table below there is no direct correaltion between fans and number of reviews.
 
	Please explain your findings and interpretation of the results:
	
	SELECT name, review_count, fans 
	
FROM user

	ORDER BY fans DESC

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	
	There are more reviews with word 'love' as compared to the word 'hate'.


	SQL code used to arrive at answer:
	--- For counting number of reviews with "love" word 
	SELECT COUNT(*) AS hate_counts 
	
FROM review
	
WHERE text LIKE "%love%"	
	+-------------+
	| hate_counts |
	+-------------+
	|        1780 |
	+-------------+


	--- For counting number of reviews with "hate" word 
	SELECT COUNT(*) AS hate_counts 
	
FROM review
	
WHERE text LIKE "%hate%

	+-------------+
	| hate_counts |
	+-------------+
	|         232 |
	+-------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

	SELECT id, name, fans  

	FROM user

	ORDER BY fans DESC 

	Limit 10
	
	
	Copy and Paste the Result Below:

	
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+		




Part 2: Inferences and Analysis


1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, they have different distribution of hours. For instance, restaurants with 2-3 stars have fixed duration of opening hours as compared the ones with 4-5 stars. In some cases 4-5 stars restaurants also have pretty short duration of opening time.   

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, they do have different number of reviews. Restaurants with stars 4-5 have pretty high number of reviews ranign from 168 to 768. Whereas restaurants 2-3 stars have review count only till 123.          
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Yes, all of the restaurants with 2-3 star rating locates on single location while restaurants with 4-5 stars happens to locate in two distinct locations different from 2-3 star restaurants.
 
 
SQL code used for analysis:

SELECT B.city, B.stars, B.review_count, C.category, B.postal_code, H.hours,
         
         


--- Creating a new column with two groups based on stars obatined by restaurants using CASE statement       
         

CASE
			   
WHEN stars BETWEEN 2 AND 3 THEN '2-3 Stars'
			   
WHEN stars BETWEEN 4 AND 5 THEN '4-5 Stars'
  	     
END AS rating





--- Joining business and category table first and then joining it with hours table using INNER join




FROM (business as B INNER JOIN category as C ON B.id = C.business_id) INNER JOIN hours as H ON B.id = H.business_id



WHERE city = 'Las Vegas' and category = 'Restaurants'

ORDER BY stars ASC		


+-----------+-------+--------------+-------------+-------------+-----------------------+-----------+
| city      | stars | review_count | category    | postal_code | hours                 | rating    |
+-----------+-------+--------------+-------------+-------------+-----------------------+-----------+
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Monday|11:00-0:00     | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Tuesday|11:00-0:00    | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Friday|11:00-0:00     | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Wednesday|11:00-0:00  | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Thursday|11:00-0:00   | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Sunday|11:00-0:00     | 2-3 Stars |
| Las Vegas |   3.0 |          123 | Restaurants | 89103       | Saturday|11:00-0:00   | 2-3 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Monday|11:00-20:00    | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Tuesday|11:00-20:00   | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Friday|11:00-20:00    | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Wednesday|11:00-20:00 | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Thursday|11:00-20:00  | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Sunday|8:00-14:00     | 4-5 Stars |
| Las Vegas |   4.0 |          168 | Restaurants | 89134       | Saturday|11:00-20:00  | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Monday|10:00-23:00    | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Tuesday|10:00-23:00   | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Friday|10:00-23:00    | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Wednesday|10:00-23:00 | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Thursday|10:00-23:00  | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Sunday|10:00-23:00    | 4-5 Stars |
| Las Vegas |   4.0 |          768 | Restaurants | 89146       | Saturday|10:00-23:00  | 4-5 Stars |
+-----------+-------+--------------+-------------+-------------+-----------------------+-----------+




		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: 
The businesses that are open have more number of reviews (roughly 7 times more) than that of the closed businesses. 
         
         
ii. Difference 2:
The number of distinct business_id for the one that are open is 5 times more than the business that are closed and hence the average review count is higher for the business that are open        
         
         
SQL code used for analysis:

SELECT is_open, COUNT(distinct id) AS Total_ids, AVG(review_count) AS Avg_Count, SUM(review_count) AS Total_count  

FROM business 

GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Finding a correlation between likes and opening hours for restaurants
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The data that is needed for this analysis is basically chosen from three tables i.e. categoery of business from category table, likes received from tip table and opening hours from hours table.
The ultimate gaol is to obtain numbers of likes recieved (by using count function) by the restaurants and identifying the working hours for which more number of likes are received. Hence that will help us to understand the timings that are more convenient for customers and have received more likes as a regard.
Why particularly hours is chosen? because when we speak for restaurants there are some particular times when most of the people like to visit. For example, working people most probably visits restaurants for dinner after around 8 pm or so. Some people might like to visit during lunch time i.e. after 11am till 3 pm. These are the peak times when the crowd is at it's peak. Hence, opening hours play a very crucial role in receving likes. Although, there are many more factors that needed to be considered based on availability of data.
                             
                  
iii. Output of your finished dataset:

+-----------------------+-------------+
| hours                 | Total_likes |
+-----------------------+-------------+
| Sunday|11:00-22:00    |          21 |
| Friday|11:00-0:00     |          17 |
| Monday|11:00-23:00    |          17 |
| Saturday|11:00-0:00   |          17 |
| Thursday|11:00-23:00  |          17 |
| Tuesday|11:00-23:00   |          17 |
| Wednesday|11:00-23:00 |          17 |
| Monday|11:00-22:00    |          14 |
| Thursday|11:00-22:00  |          13 |
| Tuesday|11:00-22:00   |          13 |
| Wednesday|11:00-22:00 |          13 |
| Friday|11:00-22:00    |          10 |
| Sunday|11:00-21:00    |           7 |
| Friday|0:00-0:00      |           6 |
| Friday|11:00-21:30    |           6 |
| Monday|0:00-0:00      |           6 |
| Saturday|0:00-0:00    |           6 |
| Saturday|11:00-21:30  |           6 |
| Sunday|0:00-0:00      |           6 |
| Thursday|0:00-0:00    |           6 |
| Tuesday|0:00-0:00     |           6 |
| Wednesday|0:00-0:00   |           6 |
| Friday|10:30-22:00    |           5 |
| Monday|10:30-21:30    |           5 |
| Monday|11:00-21:30    |           5 |
+-----------------------+-------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT hours, count(likes) AS Total_likes

FROM (hours H INNER JOIN tip T ON T.business_id = H.business_id) INNER JOIN 
category C ON C.business_id = H.business_id

WHERE category = 'Restaurants' 

GROUP BY hours

ORDER BY count(likes) DESC